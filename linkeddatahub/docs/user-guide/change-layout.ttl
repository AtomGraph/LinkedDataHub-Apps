@prefix ns:     <ns#> .
@prefix def:    <ns/default#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix dh:     <https://www.w3.org/ns/ldt/document-hierarchy/domain#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix sioc:   <http://rdfs.org/sioc/ns#> .
   
<user-guide/change-layout/> a def:Item ;
    sioc:has_container <user-guide/> ;
    dct:title "Change layout" ;
    dct:description "How to customize the layout of an application and the UI of the resources" ;
    sioc:content """<div xmlns="http://www.w3.org/1999/xhtml">
    <p class="lead">How to customize the layout of an application and the UI of the resources</p>
    <p>LinkedDataHub provides <a href="../../reference/stylesheets/" target="_blank">XSLT stylesheets</a> that render a default UI layout. When building an application you might want to render a custom
        layout however. The recommended way of doing that is to create a new stylesheet which imports the system one and only override specific templates, while reusing the rest of the layout.</p>
    <p>In the examples below we assume that the LDT template <a href="../administration/change-sitemap/" target="_blank">has been customized</a> to load not only the current document and its related concept, but also its narrower concepts.</p>
    <div>
        <h2 id="create-stylesheet">Create a stylesheet</h2>
        <p>First we need to create a new XSLT 2.0 stylesheet and use <code>&lt;xsl:import&gt;</code> to import the system <samp>layout.xsl</samp>.</p>
        <p class="lead">See an <a href="https://github.com/AtomGraph/LinkedDataHub-Apps/blob/master/demo/skos/files/skos.xsl" target="_blank">example in the SKOS demo app</a>.</p>
    </div>
    <div>
        <h2 id="configure-dataspace">Configure the dataspace</h2>
        <div class="tabbable">
            <ul class="nav nav-tabs">
                <li class="active"><a>Open-source version</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active">
                    <div>
                        <p>First, either <a href="../upload-file/" target="_blank">upload the XSLT file</a> or mount it using Docker.</p>
                        <p>Then change the value of <code>ac:stylesheet</code> on the dataspace with base URI <code>https://localhost:4443/</code> to the URI of the stylesheet.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>
        <h2 id="augment-output">Augment output</h2>
        <p>Keep default output using <code>&lt;xsl:apply-imports&gt;</code> or <code>&lt;xsl:next-match&gt;</code> and add new output before/after it:</p>
        <pre>&lt;xsl:template match="*[skos:narrower]" mode="bs2:Block"&gt;
    &lt;xsl:next-match/&gt;

    &lt;h3&gt;Narrower concepts&lt;/h3&gt;
    &lt;!-- show an inline list with links --&gt;
    &lt;ul&gt;
        &lt;xsl:apply-templates select="key('resources', skos:narrower/(@rdf:resource, @rdf:nodeID))" mode="bs2:List"&gt;
            &lt;xsl:sort select="ac:label(.)"/&gt;
        &lt;/xsl:apply-templates&gt;
    &lt;/ul&gt;
&lt;/xsl:template&gt;</pre>
    </div>
    <div>
        <h2 id="suppress-output">Suppress output</h2>
        <p>In the above example, we have rendered <code>skos:narrower</code> properties in our own special way. Which means that the default output of the same properties from <code>bs2:PropertyList</code> is no longer desired.</p>
        <p>You can specity an empty template at any level (graph/property/resource) to disable output of that layout mode. For example:</p>
        <pre>&lt;xsl:template match="skos:narrower" mode="bs2:PropertyList"/&gt;</pre>
    </div>
</div>"""^^rdf:XMLLiteral .
