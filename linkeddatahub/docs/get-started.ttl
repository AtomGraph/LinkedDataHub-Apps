@prefix ns:     <ns#> .
@prefix def:    <ns/default#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .
@prefix dh:     <https://www.w3.org/ns/ldt/document-hierarchy/domain#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix sioc:   <http://rdfs.org/sioc/ns#> .

<get-started/> a def:Container ;
    sioc:has_parent <> ;
    dh:select <queries/default/select-children/#this> ;
    dct:title "Get started" ;
    dct:description "All the basics of LinkedDataHub. From installation to extending the model and user interface." ;
    sioc:content """<div xmlns="http://www.w3.org/1999/xhtml">
    <p class="lead">All the basics of LinkedDataHub. From installation to customizing the model and user interface.</p>
    <p>This guide will show how a LinkedDataHub application can be used to manage domain-specific RDF classes and instances. As an example, we will us <a href="https://www.w3.org/TR/skos-primer/" target="_blank">SKOS</a> concepts and concept schemes.</p>
    <div>
        <h2 id="setup">Setup</h2>
    </div>
    <div>
        <h2 id="get-an-account">Get an account</h2>
    </div>
    <div>
        <h2 id="ui-overview">UI overview</h2>
    </div>
    <div>
        <h2 id="create-container">Create a container</h2>
        <p>We will need to containers for our SKOS instances: one for the concepts and one for the concept schemes.</p>
    </div>

</div>"""^^rdf:XMLLiteral .
